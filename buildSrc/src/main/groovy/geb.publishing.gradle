/*
 *  Licensed to the Apache Software Foundation (ASF) under one
 *  or more contributor license agreements.  See the NOTICE file
 *  distributed with this work for additional information
 *  regarding copyright ownership.  The ASF licenses this file
 *  to you under the Apache License, Version 2.0 (the
 *  "License"); you may not use this file except in compliance
 *  with the License.  You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing,
 *  software distributed under the License is distributed on an
 *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *  KIND, either express or implied.  See the License for the
 *  specific language governing permissions and limitations
 *  under the License.
 */
plugins {
    id 'geb.base'
    id 'base'
    id 'maven-publish'
    id 'signing'
}

signing {
    required = { !gebModule.isSnapshot() }
    publishing.publications.configureEach {
        sign(it)
    }
}

publishing {
    publications.configureEach {
        pom {
            url = "http://groovy.apache.org/geb/"
            inceptionYear = "2010"
            licenses {
                license {
                    name = 'The Apache Software License, Version 2.0'
                    url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution = 'repo'
                }
            }
            scm {
                url = "https://github.com/apache/groovy-geb/"
            }
            developers {
                developer {
                    id = "alkemist"
                    name = "Luke Daley"
                    roles = ["Founder"]
                }
                developer {
                    id = "erdi"
                    name = "Marcin Erdmann"
                    roles = ["Lead"]
                }
            }
        }
    }
}

gebModule {
    onCi {
        signing {
            required = { false }
        }

        tasks.withType(PublishToMavenRepository).configureEach {
            onlyIf { gebModule.isSnapshot() }
        }
    }
}