/*
 *  Licensed to the Apache Software Foundation (ASF) under one
 *  or more contributor license agreements.  See the NOTICE file
 *  distributed with this work for additional information
 *  regarding copyright ownership.  The ASF licenses this file
 *  to you under the Apache License, Version 2.0 (the
 *  "License"); you may not use this file except in compliance
 *  with the License.  You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing,
 *  software distributed under the License is distributed on an
 *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *  KIND, either express or implied.  See the License for the
 *  specific language governing permissions and limitations
 *  under the License.
 */
plugins {
    id 'geb.publishing'
    id 'geb.groovy-module'
}

tasks.register("javadocJar", Jar) {
    archiveClassifier = 'javadoc'
    from tasks.named("groovydoc")
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    repositories {
        maven {
            name = "LocalFile"
            url = rootProject.layout.buildDirectory.dir("repo").get().asFile.absolutePath
        }
        maven {
            name = "Apache"
            url = gebModule.isSnapshot()
                ? 'https://repository.apache.org/content/repositories/snapshots'
                : 'https://repository.apache.org/service/local/staging/deploy/maven2'
            credentials {
                username = gebModule.isSnapshot() ? findProperty('asfNexusUsername') : findProperty('apacheUser')
                password = gebModule.isSnapshot() ? findProperty('asfNexusPassword') : findProperty('apachePassword')
            }
        }
    }
    publications {
        main(MavenPublication) {
            from components.java
        }
    }
}

tasks.register("publishJarsAndManual") {
    dependsOn 'publishMainPublicationToApacheRepository'
}
