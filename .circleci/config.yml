# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

version: 2
jobs:
  saucelabs:
    docker:
      - image: eclipse-temurin:21-jdk
    resource_class: large
    environment:
        GRADLE_OPTS: -Xmx1024m -XX:MaxMetaspaceSize=256m
        GRADLE_USER_HOME: .gradle-home
    steps:
      - checkout
      - restore_cache:
          keys:
            - gradle-home-saucelabs-{{ .Branch }}
            - gradle-home-saucelabs-master
            - gradle-home-saucelabs
      - run:
          command: |
            ./gradlew --no-daemon -Pci --max-workers 5 --parallel allSauceLabsTests
      - run: *collectTestResults
      - store_test_results:
          path: ~/test-results/
      - store_artifacts:
          path: build/reports
      - save_cache:
          key: gradle-home-saucelabs-{{ .Branch }}-{{ epoch }}
          paths:
            - .gradle-home
#  TODO: Return LambdaTest integration to the CI pipeline. Jobs are failing in CI when calling to LambdaTest, but not locally.
#  lambdatest:
#    docker:
#      - image: gebish/ci:v13
#    resource_class: large
#    environment:
#      GRADLE_OPTS: -Xmx1024m -XX:MaxMetaspaceSize=256m
#      GRADLE_USER_HOME: .gradle-home
#    steps:
#      - checkout
#      - restore_cache:
#          keys:
#            - gradle-home-lambdatest-{{ .Branch }}
#            - gradle-home-lambdatest-master
#            - gradle-home-lambdatest
#      - run:
#          command: |
#            ./gradlew --no-daemon -Pci --max-workers 5 --parallel allLambdaTestTests
#      - run:
#          name: Copy all test results to a directory
#          command: |
#            mkdir -p ~/test-results/junit/
#            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
#      - store_test_results:
#          path: ~/test-results/
#      - store_artifacts:
#          path: build/reports
#      - save_cache:
#          key: gradle-home-lambdatest-{{ .Branch }}-{{ epoch }}
#          paths:
#            - .gradle-home
  non-ie:
    docker:
      - image: eclipse-temurin:21-jdk
    resource_class: large
    environment:
        GRADLE_OPTS: -Xmx1024m -XX:MaxMetaspaceSize=256m
        GRADLE_USER_HOME: .gradle-home
    steps:
      - checkout
      - restore_cache:
          keys:
            - gradle-home-non-ie-{{ .Branch }}
            - gradle-home-non-ie-master
            - gradle-home-non-ie
      - run:
          command: |
            ./gradlew --no-daemon -Pci --max-workers 5 --parallel nonIeBrowserStackTests
      - run: *collectTestResults
      - store_test_results:
          path: ~/test-results/
      - store_artifacts:
          path: build/reports
      - save_cache:
          key: gradle-home-non-ie-{{ .Branch }}-{{ epoch }}
          paths:
            - .gradle-home
  ie:
    docker:
      - image: eclipse-temurin:21-jdk
    resource_class: large
    environment:
        GRADLE_OPTS: -Xmx1024m -XX:MaxMetaspaceSize=256m
        GRADLE_USER_HOME: .gradle-home
    steps:
      - checkout
      - restore_cache:
          keys:
            - gradle-home-ie-{{ .Branch }}
            - gradle-home-ie-master
            - gradle-home-ie
      - run:
          command: |
            ./gradlew --no-daemon -Pci --max-workers 5 --parallel ieBrowserStackTests
      - run: *collectTestResults
      - store_test_results:
          path: ~/test-results/
      - store_artifacts:
          path: build/reports
      - save_cache:
          key: gradle-home-ie-{{ .Branch }}-{{ epoch }}
          paths:
            - .gradle-home
#  upload:
#    docker:
#      - image: eclipse-temurin:21-jdk
#    resource_class: large
#    environment:
#        GRADLE_OPTS: -Xmx1024m -XX:MaxMetaspaceSize=256m
#        GRADLE_USER_HOME: .gradle-home
#    steps:
#      - checkout
#      - restore_cache:
#          keys:
#            - gradle-home-upload-{{ .Branch }}
#            - gradle-home-upload-master
#            - gradle-home-upload
#      - run:
#          command: |
#            ./gradlew --no-daemon -Pci --max-workers 4 --parallel publishJarsAndManual
#      - save_cache:
#          key: gradle-home-upload-{{ .Branch }}-{{ epoch }}
#          paths:
#            - .gradle-home
#  publish-site:
#    docker:
#      - image: alpine/git
#    steps:
#      - checkout
#      - run:
#          command: |
#            git remote add heroku https://heroku:$HEROKU_API_KEY@git.heroku.com/gebish.git
#            git push -f heroku master
#  trigger-example-projects-4.x:
#    docker:
#      - image: alpine/curl
#    steps:
#      - run:
#          command: |
#            curl -X POST -u ${CIRCLE_API_EXAMPLE_GRADLE_TOKEN}: https://circleci.com/api/v1.1/project/github/geb/geb-example-gradle/tree/4.x
#            curl -X POST -u ${CIRCLE_API_EXAMPLE_CUCUMBER_JVM_TOKEN}: https://circleci.com/api/v1.1/project/github/geb/geb-example-cucumber-jvm/tree/latest
#            curl -X POST -u ${CIRCLE_API_EXAMPLE_MAVEN_TOKEN}: https://circleci.com/api/v1.1/project/github/geb/geb-example-maven/tree/4.x
#            curl -H "Authorization: Bearer ${APPVEYOR_TOKEN}" -H "Content-type: application/json" -X POST https://ci.appveyor.com/api/builds -d '{"accountName": "erdi", "projectSlug": "geb-example-gradle", "branch": "4.x"}'
#  trigger-example-projects-master:
#    docker:
#      - image: alpine/curl
#    steps:
#      - run:
#          command: |
#            curl -X POST -u ${CIRCLE_API_EXAMPLE_GRADLE_TOKEN}: https://circleci.com/api/v1.1/project/github/geb/geb-example-gradle/tree/latest
#            curl -X POST -u ${CIRCLE_API_EXAMPLE_MAVEN_TOKEN}: https://circleci.com/api/v1.1/project/github/geb/geb-example-maven/tree/latest
#            curl -H "Authorization: Bearer ${APPVEYOR_TOKEN}" -H "Content-type: application/json" -X POST https://ci.appveyor.com/api/builds -d '{"accountName": "erdi", "projectSlug": "geb-example-gradle", "branch": "latest"}'

workflows:
  version: 2
  build-workflow:
    jobs:
      - saucelabs:
          filters:
            branches:
              ignore: /pull\/[0-9]+/
#      - lambdatest:
#          requires:
#            - check
#            - manual
#          filters:
#            branches:
#              ignore: /pull\/[0-9]+/
      - non-ie:
          filters:
            branches:
              ignore: /pull\/[0-9]+/
      - ie:
          requires:
            - non-ie
          filters:
            branches:
              ignore: /pull\/[0-9]+/
#      - upload:
#          requires:
#            - dockerised-cross-browser
#            - saucelabs
#            - lambdatest
#            - ie
#          filters:
#            branches:
#              only:
#                - master
#                - 4.x
#      - trigger-example-projects-master:
#          requires:
#            - upload
#          filters:
#            branches:
#              only: master
#      - trigger-example-projects-4.x:
#          requires:
#            - upload
#          filters:
#            branches:
#              only: 4.x